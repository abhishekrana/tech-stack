{
  "name": "Tech Stack",
  "service": "tech-stack",
  "dockerComposeFile": ["docker-compose.yml"],
  "workspaceFolder": "/workspace", // should match Dockerfile WORKDIR
  //"postCreateCommand": ".devcontainer/scripts/postCreateCommand.sh",
  //"postStartCommand": ".devcontainer/scripts/postStartCommand.sh",
  // "postAttachCommand": ".devcontainer/scripts/postAttachCommand.sh",
  "shutdownAction": "none",
  // https://containers.dev/features
  "features": {
    "ghcr.io/devcontainers/features/docker-in-docker:2": {
      "version": "24.0.4",
      "moby": false
    }
  },
  "customizations": {
    "vscode": {
      "settings": {
        "[dockercompose]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[dockerfile]": {
          "editor.defaultFormatter": "ms-azuretools.vscode-docker",
          "editor.formatOnSave": true
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[jsonc]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[markdown]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "[sql]": {
          "editor.defaultFormatter": "cweijan.vscode-postgresql-client2"
        },
        "[shellscript]": {
          "editor.defaultFormatter": "foxundermoon.shell-format",
          "editor.formatOnSave": true
        },
        "[toml]": {
          "editor.defaultFormatter": "tamasfe.even-better-toml",
          "editor.formatOnSave": true
        },
        "[yaml]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.formatOnSave": true
        },
        "editor.rulers": [120],
        "editor.semanticHighlighting.enabled": true,
        "editor.tabSize": 4,
        "explorer.autoReveal": false,
        "files.associations": {
          "*.cjson": "jsonc",
          "Dockerfile-*": "dockerfile",
          "Dockerfile.*": "dockerfile",
          "Dockerfile_*": "dockerfile"
        },
        "files.exclude": {
          "**/.git": true,
          "**/.mypy_cache/": true,
          "**/.pytest_cache/": true,
          "**/.ruff_cache/": true,
          "**/.venv": true,
          "**/__debug_bin": true,
          "**/__pycache__/": true,
          "**/node_modules/": true,
          "**/tmp/": true
        },
        "files.insertFinalNewline": true,
        "files.trimTrailingWhitespace": true,
        "files.watcherExclude": {
          "**/.git": true,
          "**/.mypy_cache/": true,
          "**/.pytest_cache/": true,
          "**/.ruff_cache/": true,
          "**/.venv": true,
          "**/__debug_bin": true,
          "**/__pycache__/": true,
          "**/node_modules/": true,
          "**/tmp/": true
        },
        "prettier.configPath": "/workspace/.prettierrc",
        "shellformat.flag": "-i 4",
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.scrollback": 10000,
        "terminal.integrated.persistentSessionReviveProcess": "onExitAndWindowClose",
        "vs-kubernetes": {
          // "vscode-kubernetes.helm-path.linux": "/usr/local/bin/helm",
          // "vscode-kubernetes.kubectl-path.linux": "/usr/local/bin/kubectl"
        },
        "workbench.editor.enablePreview": false,
        "workbench.editor.wrapTabs": true,
        "yaml.format.bracketSpacing": false,
        "yaml.format.printWidth": 120,
        "yaml.format.singleQuote": true,
        "yaml.schemaStore.enable": true,
        "yaml.schemas": {
          "https://json.schemastore.org/taskfile.json": ["Taskfile.yml", "Taskfile.*.yml"]
        },
        // Frontend
        "[css]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.codeActionsOnSave": {
            "source.organizeImports": true,
            "source.fixAll.eslint": true
          },
          "editor.formatOnSave": true
        },
        "[html]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.codeActionsOnSave": {
            "source.organizeImports": true,
            "source.fixAll.eslint": true
          },
          "editor.formatOnSave": true
        },
        "[javascript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.codeActionsOnSave": {
            "source.organizeImports": true,
            "source.fixAll.eslint": true
          },
          "editor.formatOnSave": true
        },
        "[scss]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.codeActionsOnSave": {
            "source.organizeImports": true,
            "source.fixAll.eslint": true
          },
          "editor.formatOnSave": true
        },
        "[ts]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.codeActionsOnSave": {
            "source.organizeImports": true,
            "source.fixAll.eslint": true
          },
          "editor.formatOnSave": true
        },
        "[vue]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode",
          "editor.codeActionsOnSave": {
            "source.organizeImports": true,
            "source.fixAll.eslint": true
          },
          "editor.formatOnSave": true
        },
        // GoLang
        "[go]": {
          "editor.codeActionsOnSave": {
            "source.organizeImports": false
          },
          "editor.formatOnSave": true
        },
        "go.buildTags": "acceptance,integration,unit",
        "go.useLanguageServer": true,
        "gopls": {
          "experimentalWorkspaceModule": true
        },
        // Python
        "[python]": {
          "editor.defaultFormatter": "ms-python.black-formatter",
          "editor.codeActionsOnSave": {
            "source.organizeImports": true
          },
          "editor.formatOnSave": true
        },
        "python.analysis.autoImportCompletions": true,
        "python.analysis.inlayHints.functionReturnTypes": true,
        "python.analysis.inlayHints.variableTypes": true,
        "python.analysis.typeCheckingMode": "strict",
        "python.formatting.blackArgs": ["--line-length", "120"],
        "python.formatting.provider": "black",
        "python.interpreter.infoVisibility": "always",
        "python.languageServer": "Pylance",
        "python.linting.mypyEnabled": true,
        "python.linting.pylintEnabled": false,
        "python.testing.pytestEnabled": true,
        // -- application specific settings --
        "python.analysis.extraPaths": ["/workspace/app-1/src"],
        "python.linting.mypyArgs": [
          "--strict",
          "--no-warn-unused-ignores",
          "/workspace/app-1/src"
        ],
        "python.testing.pytestArgs": ["-s", "-v", "--ignore=tmp", "/workspace/service-1/src"],
        "python.venvFolders": ["../../workspace/service-1"]
      },
      "extensions": [
        // General
        "42crunch.vscode-openapi", // support for the OpenAPI Specification (OAS) in JSON or YAML format, SwaggerUI and ReDoc preview, IntelliSense, linting, schema enforcement, and more
        "cweijan.vscode-postgresql-client2", // database client to explore and modify database. Run queries direcly from .sql files
        "eamodio.gitlens", // visualize code authorship via code lens, navigate and explore git repositories
        "esbenp.prettier-vscode", // code formatter for JavaScript, TypeScript, Flow, JSX, JSON, CSS, SCSS, HTML, Vue, Angular, GraphQL, Markdown, YAML
        "formulahendry.code-runner", // run code snippet or code file for multiple languages
        "foxundermoon.shell-format", // code formatter for shellscript (.bash, .sh)
        "github.vscode-github-actions", // gitHub Actions workflows and runs for github.com hosted repositories in VS Code
        "GitHub.vscode-pull-request-github", // review and manage github pull requests and issues
        "IBM.output-colorizer", // syntax highlighting for logs
        "mikestead.dotenv", // syntax highlighting support for environment (.env) files
        "ms-azuretools.vscode-docker", // create, manage, and debug containerized applications
        "ms-kubernetes-tools.vscode-kubernetes-tools", // syntax highlighting for YAML + Helm Templates, autocomplete for Helm
        "ms-vscode-remote.vscode-remote-extensionpack", // open any folder in a container, on a remote machine, or in WSL and take advantage of VS Code's full feature set.
        "quicktype.quicktype", // Copy JSON, paste as Python, Go, TypeScript, C#, C++ and more.
        "rangav.vscode-thunder-client", // REST API client with support for import/export collections from/to Postman
        "redhat.vscode-yaml", // kubernetes syntax support
        "richie5um2.vscode-sort-json", // alphabetically sorts the keys in selected JSON objects
        "smulyono.reveal", // reveal open files into sidebar
        "tamasfe.even-better-toml", // fully-featured TOML support
        "usernamehw.errorlens", // display errors, warnings and other language diagnostics inline
        "visualstudioexptteam.intellicode-api-usage-examples", // see relevant code examples APIs right in your editor
        "VisualStudioExptTeam.vscodeintellicode", // AI-assisted development features/suggestions for Python, TypeScript/JavaScript
        // Vue.js
        "antfu.vite", // support vite
        "dbaeumer.vscode-eslint", // integrates ESLint
        "esbenp.prettier-vscode", // code formatter for JavaScript, TypeScript, Flow, JSX, JSON, CSS, SCSS, HTML, Vue, Angular, GraphQL, Markdown, YAML
        "ms-playwright.playwright", // Run Playwright Test tests in Visual Studio Code
        "sdras.vue-vscode-snippets", // snippets that will supercharge your Vue workflow
        "stylelint.vscode-stylelint", // stylelint extension
        "vue.volar", // Vue Language Features is a language support extension built for Vue
        "Vue.vscode-typescript-vue-plugin", // Vue Plugin for TypeScript server. Get type support for *.vue imports in TS files.
        "zixuanchen.vitest-explorer", // Vitest case runner
        // GoLang
        "golang.go", // go language support
        "aleksandra.go-group-imports", // separate imports in go files into three groups: stdlib, 3rdparty, own on file save
        // Python
        "ms-python.black-formatter", // formatting support for python files using `black`
        "ms-python.debugpy@prerelease", // Python Debugger extension using `debugpy`
        "ms-python.isort", // import sorting support for python files using `isort`
        "ms-python.mypy-type-checker", // linting support for python files using `mypy`
        // "ms-python.pylint", // linting support for python files using `pylint`
        "ms-python.python", // python linting, debugging, code formatting, refactoring, unit tests
        "ms-python.vscode-pylance", // language server for Python for IntelliSense support and static type checking
        "charliermarsh.ruff" // support for the Ruff linter
      ]
    }
  }
}
